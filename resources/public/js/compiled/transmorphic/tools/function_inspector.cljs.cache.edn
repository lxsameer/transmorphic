;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, defcomponent transmorphic.core, go-loop cljs.core.async.macros}, :excludes #{}, :name transmorphic.tools.function-inspector, :imports nil, :requires {transmorphic.event transmorphic.event, transmorphic.manipulation transmorphic.manipulation, async cljs.core.async, transmorphic.utils transmorphic.utils, transmorphic.tools.window transmorphic.tools.window, cljs.core.async cljs.core.async, cljs.pprint cljs.pprint, transmorphic.core transmorphic.core, clojure.string clojure.string, transmorphic.repl transmorphic.repl, transmorphic.tools.ace transmorphic.tools.ace, transmorphic.morph transmorphic.morph, transmorphic.symbolic transmorphic.symbolic}, :uses {changes-on-morph transmorphic.manipulation, timeout cljs.core.async, rerender! transmorphic.core, load-and-callback! transmorphic.repl, pprint cljs.pprint, <! cljs.core.async, track-changes! transmorphic.manipulation, join clojure.string, get-cursor-pos transmorphic.event, rectangle transmorphic.core, text transmorphic.core, code-dispatch cljs.pprint, $morph transmorphic.morph, get-client-pos transmorphic.event, morph-eval-str transmorphic.repl, chan cljs.core.async, onto-chan cljs.core.async, io transmorphic.core, centered-in transmorphic.morph, position-in-world transmorphic.morph, get-numeric-token-at transmorphic.tools.ace, split-lines clojure.string, add-points transmorphic.utils, save-handler transmorphic.tools.ace, revert-tx! transmorphic.manipulation, set-token-value! transmorphic.tools.ace, read-objs transmorphic.repl, IRender transmorphic.core, window transmorphic.tools.window, window-resizer transmorphic.tools.window, add-evolvement! transmorphic.manipulation, listmorph transmorphic.core, >! cljs.core.async, morph-eval transmorphic.repl, format-code transmorphic.symbolic, *print-right-margin* cljs.pprint, set-token-selection! transmorphic.tools.ace, ellipse transmorphic.core, put! cljs.core.async, image transmorphic.core}, :defs {morph-mapping-button {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 98, :column 15, :end-line 98, :end-column 35, :arglists (quote ([props__30808__auto__ & submorphs__30809__auto__])), :doc nil, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}}, :name transmorphic.tools.function-inspector/morph-mapping-button, :variadic true, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :end-column 35, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :doc nil}, inspected-morphs {:name transmorphic.tools.function-inspector/inspected-morphs, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :line 22, :column 1, :end-line 22, :end-column 22, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 22, :column 6, :end-line 22, :end-column 22}}, function-inspector {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 118, :column 15, :end-line 118, :end-column 33, :arglists (quote ([props__30808__auto__ & submorphs__30809__auto__])), :doc nil, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}}, :name transmorphic.tools.function-inspector/function-inspector, :variadic true, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :end-column 33, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 118, :end-line 118, :max-fixed-arity 1, :fn-var true, :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :doc nil}, map->function-inspector* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__32742])), :file nil}, :name transmorphic.tools.function-inspector/map->function-inspector*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([G__32742]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 118, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32742]))}, inspecting {:name transmorphic.tools.function-inspector/inspecting, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :line 76, :column 1, :end-line 76, :end-column 20, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 76, :column 10, :end-line 76, :end-column 20, :declared true}}, ->scrubber-pane* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location])), :file nil}, :name transmorphic.tools.function-inspector/->scrubber-pane*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([component-id local-state parent props txs reconciler abstraction submorphs source-location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 37, :max-fixed-arity 9, :fn-var true, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location]))}, prepare-scrubbing {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 60, :column 7, :end-line 60, :end-column 24, :arglists (quote ([model ace-instance client-pos]))}, :name transmorphic.tools.function-inspector/prepare-scrubbing, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :end-column 24, :method-params ([model ace-instance client-pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 3, :fn-var true, :arglists (quote ([model ace-instance client-pos]))}, activate-scrubber-pane {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 31, :column 7, :end-line 31, :end-column 29, :arglists (quote ([scrub-pos scrub-value callback]))}, :name transmorphic.tools.function-inspector/activate-scrubber-pane, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :end-column 29, :method-params ([scrub-pos scrub-value callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists (quote ([scrub-pos scrub-value callback]))}, loop-mapping-button* {:num-fields 9, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? transmorphic.core/IRender cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.tools.function-inspector/loop-mapping-button*, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :type true, :column 1, :internal-ctor true, :line 78, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, scrubber-pane-state {:name transmorphic.tools.function-inspector/scrubber-pane-state, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :line 26, :column 1, :end-line 26, :end-column 25, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 26, :column 6, :end-line 26, :end-column 25}}, ->function-inspector* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location])), :file nil}, :name transmorphic.tools.function-inspector/->function-inspector*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([component-id local-state parent props txs reconciler abstraction submorphs source-location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 118, :max-fixed-arity 9, :fn-var true, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location]))}, scrubber-pane {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 37, :column 15, :end-line 37, :end-column 28, :arglists (quote ([props__30808__auto__ & submorphs__30809__auto__])), :doc nil, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}}, :name transmorphic.tools.function-inspector/scrubber-pane, :variadic true, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :end-column 28, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :doc nil}, scrubber-pane* {:num-fields 9, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? transmorphic.core/IRender cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.tools.function-inspector/scrubber-pane*, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :type true, :column 1, :internal-ctor true, :line 37, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->loop-mapping-button* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__32710])), :file nil}, :name transmorphic.tools.function-inspector/map->loop-mapping-button*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([G__32710]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 78, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32710]))}, IRender {:impls (transmorphic.tools.function-inspector/function-inspector* transmorphic.tools.function-inspector/morph-mapping-button* transmorphic.tools.function-inspector/loop-mapping-button* transmorphic.tools.function-inspector/scrubber-pane*)}, ->morph-mapping-button* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location])), :file nil}, :name transmorphic.tools.function-inspector/->morph-mapping-button*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([component-id local-state parent props txs reconciler abstraction submorphs source-location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 98, :max-fixed-arity 9, :fn-var true, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location]))}, loop-mapping-button {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 78, :column 15, :end-line 78, :end-column 34, :arglists (quote ([props__30808__auto__ & submorphs__30809__auto__])), :doc nil, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}}, :name transmorphic.tools.function-inspector/loop-mapping-button, :variadic true, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :end-column 34, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :arglists-meta (nil)}, :method-params [(props__30808__auto__ submorphs__30809__auto__)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 78, :end-line 78, :max-fixed-arity 1, :fn-var true, :arglists ([props__30808__auto__ & submorphs__30809__auto__]), :doc nil}, morph-mapping-button* {:num-fields 9, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? transmorphic.core/IRender cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.tools.function-inspector/morph-mapping-button*, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :type true, :column 1, :internal-ctor true, :line 98, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->loop-mapping-button* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location])), :file nil}, :name transmorphic.tools.function-inspector/->loop-mapping-button*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([component-id local-state parent props txs reconciler abstraction submorphs source-location]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 78, :max-fixed-arity 9, :fn-var true, :arglists (quote ([component-id local-state parent props txs reconciler abstraction submorphs source-location]))}, inspection-active {:name transmorphic.tools.function-inspector/inspection-active, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :line 76, :column 1, :end-line 76, :end-column 38, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 76, :column 21, :end-line 76, :end-column 38, :declared true}}, map->scrubber-pane* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__32691])), :file nil}, :name transmorphic.tools.function-inspector/map->scrubber-pane*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([G__32691]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32691]))}, function-inspector* {:num-fields 9, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? transmorphic.core/IRender cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.tools.function-inspector/function-inspector*, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :type true, :column 1, :internal-ctor true, :line 118, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, map->morph-mapping-button* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__32726])), :file nil}, :name transmorphic.tools.function-inspector/map->morph-mapping-button*, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :method-params ([G__32726]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__32726]))}, inspect-function! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljs/transmorphic/tools/function_inspector.cljs", :line 169, :column 7, :end-line 169, :end-column 24, :arglists (quote ([lens-ref]))}, :name transmorphic.tools.function-inspector/inspect-function!, :variadic false, :file "src/cljs/transmorphic/tools/function_inspector.cljs", :end-column 24, :method-params ([lens-ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lens-ref]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, transmorphic.core transmorphic.core, cljs.pprint cljs.pprint}, :cljs.analyzer/constants {:seen #{:y :reification :active? changes-on-morph abstraction morph-mapping-button :morph-id submorphs rerender! inspected-morphs :source-location function-inspector model-atom local-state callback self :m_1 get-cursor-pos rectangle :parent text disj model props :on-close :font-size $morph get-client-pos .stopPropagation active? :default :added :ns :name source-location * :fill :value :inspectable? let v -> :text-color :ace :reconciler :txs meta :start fn :type parent int > :target-id :component if tx-path :on-mouse-down scrubber-pane-state concat :title scrubbed-value new-extent - scrubber-pane reset! :token reconciler txs :source-mapping :border-width :keys revert-tx! tx-ref dy update-in :expr :submorph-locations not :opacity :id IRender swap! :extent window :scrub-pos e :on-mouse-move :scrollable? :scrub-value loop-mapping-button :component-id cond :border-color .1 :position :on-mouse-up :abstraction :x tx render hl + :scrubbing client-pos :submorphs :visible transmorphic.tools.function-inspector :morph :border-radius :local-state :callback :model-atom coloring scrub-pos scrub-value :target-ref component-id :removed entry :text-string :font-family cursor-pos :on-resize position :model :deep-changes :props}, :order [:active? :scrub-pos :callback :scrub-value :component-id :local-state :parent :props :txs :reconciler :abstraction :submorphs :source-location :visible :fill :opacity :extent :on-mouse-up :on-mouse-move :y :default :x component-id local-state parent props txs reconciler abstraction submorphs source-location :reification :type :submorph-locations rectangle active? -> $morph fn e reset! scrubber-pane-state let cursor-pos get-cursor-pos client-pos get-client-pos scrubbed-value + int scrub-value * dy - scrub-pos cond > .1 callback :added :removed :morph :m_1 IRender render self :keys :expr :ns :name transmorphic.tools.function-inspector scrubber-pane :start :scrubbing :value :token :deep-changes :inspectable? :border-color :border-width :position :border-radius :on-mouse-down :id :text-color :font-size :font-family :text-string text coloring position .stopPropagation rerender! update-in model not if loop-mapping-button :source-mapping morph-mapping-button :scrollable? :on-close :on-resize :target-ref :model-atom :model window swap! inspected-morphs disj new-extent changes-on-morph model-atom meta hl v entry tx tx-ref tx-path concat revert-tx! :component function-inspector :title :target-id :ace :morph-id]}, :doc nil}