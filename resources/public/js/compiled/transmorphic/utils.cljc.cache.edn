;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name transmorphic.utils, :imports nil, :requires nil, :uses nil, :defs {add-points {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 3, :column 7, :end-line 3, :end-column 17, :arglists (quote ([point & points])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(point points)], :arglists ([point & points]), :arglists-meta (nil)}}, :name transmorphic.utils/add-points, :variadic true, :file "src/cljc/transmorphic/utils.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(point points)], :arglists ([point & points]), :arglists-meta (nil)}, :method-params [(point points)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists ([point & points])}, eucl-distance {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 9, :column 7, :end-line 9, :end-column 20, :arglists (quote ([a {bx :x, by :y}]))}, :name transmorphic.utils/eucl-distance, :variadic false, :file "src/cljc/transmorphic/utils.cljc", :end-column 20, :method-params ([a p__27247]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a {bx :x, by :y}]))}, delta {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 13, :column 7, :end-line 13, :end-column 12, :arglists (quote ([{x1 :x, y1 :y} {x2 :x, y2 :y}]))}, :name transmorphic.utils/delta, :variadic false, :file "src/cljc/transmorphic/utils.cljc", :end-column 12, :method-params ([p__27256 p__27257]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{x1 :x, y1 :y} {x2 :x, y2 :y}]))}, contains-rect? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 17, :column 7, :end-line 17, :end-column 21, :arglists (quote ([[origin-a extent-a] [origin-b extent-b]]))}, :name transmorphic.utils/contains-rect?, :variadic false, :file "src/cljc/transmorphic/utils.cljc", :end-column 21, :method-params ([p__27266 p__27267]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 2, :fn-var true, :arglists (quote ([[origin-a extent-a] [origin-b extent-b]]))}, bounds {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 29, :column 7, :end-line 29, :end-column 13, :arglists (quote ([morph]))}, :name transmorphic.utils/bounds, :variadic false, :file "src/cljc/transmorphic/utils.cljc", :end-column 13, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, bottom-right {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 32, :column 7, :end-line 32, :end-column 19, :arglists (quote ([morph]))}, :name transmorphic.utils/bottom-right, :variadic false, :file "src/cljc/transmorphic/utils.cljc", :end-column 19, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, top-right {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 35, :column 7, :end-line 35, :end-column 16, :arglists (quote ([morph]))}, :name transmorphic.utils/top-right, :variadic false, :file "src/cljc/transmorphic/utils.cljc", :end-column 16, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, bottom-left {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/utils.cljc", :line 39, :column 7, :end-line 39, :end-column 18, :arglists (quote ([morph]))}, :name transmorphic.utils/bottom-left, :variadic false, :file "src/cljc/transmorphic/utils.cljc", :end-column 18, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y :extent :position :x :props}, :order [:x :y :position :props :extent]}, :doc nil}