;; Analyzed by ClojureScript 1.7.170
{:use-macros {defcomponent transmorphic.core, no-warn cljs.analyzer.macros, defmorph transmorphic.core}, :excludes #{}, :name transmorphic.core, :imports nil, :requires {transmorphic.event transmorphic.event, goog.dom goog.dom, dom om.dom, om.dom om.dom, clojure.set clojure.set, devtools devtools.core, gdom goog.dom, om.core om.core, om om.core, event transmorphic.event, devtools.core devtools.core, clojure.string clojure.string, transmorphic.repl transmorphic.repl, transmorphic.symbolic transmorphic.symbolic}, :uses {union clojure.set, join clojure.string, clean-handlers! transmorphic.event, update-ns-source! transmorphic.repl, morph-eval-str transmorphic.repl, get-description transmorphic.symbolic, replace clojure.string, split clojure.string, extract-event-handlers transmorphic.event}, :defs {map->image* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30914])), :file nil}, :name transmorphic.core/map->image*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30914]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 200, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30914]))}, ensure {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 601, :column 7, :end-line 601, :end-column 13, :arglists (quote ([state ref])), :doc "Ensures that the reference is\n   actually valid, replacing it\n   in case a redirect is referenced."}, :name transmorphic.core/ensure, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 13, :method-params ([state ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 601, :end-line 601, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state ref])), :doc "Ensures that the reference is\n   actually valid, replacing it\n   in case a redirect is referenced."}, universe {:name transmorphic.core/universe, :file "src/cljc/transmorphic/core.cljs", :line 1155, :column 1, :end-line 1155, :end-column 14, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1155, :column 6, :end-line 1155, :end-column 14}}, toggle-reconciler! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1102, :column 7, :end-line 1102, :end-column 25, :arglists (quote ([component]))}, :name transmorphic.core/toggle-reconciler!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 25, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1102, :end-line 1102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component]))}, ->t_transmorphic$core30954 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([render-io p__30951 owner map__30952 morph-id props submorphs meta30955])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/->t_transmorphic$core30954, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([render-io p__30951 owner map__30952 morph-id props submorphs meta30955]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 239, :max-fixed-arity 8, :fn-var true, :arglists (quote ([render-io p__30951 owner map__30952 morph-id props submorphs meta30955])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, history-cache {:name transmorphic.core/history-cache, :file "src/cljc/transmorphic/core.cljs", :line 291, :column 1, :end-line 291, :end-column 19, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 291, :column 6, :end-line 291, :end-column 19}}, copy-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 735, :column 8, :end-line 735, :end-column 18, :private true, :arglists (quote ([state {:keys [ref new-morph-id new-id]}]))}, :private true, :name transmorphic.core/copy-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([state p__31190]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 735, :end-line 735, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref new-morph-id new-id]}]))}, reverted? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 295, :column 7, :end-line 295, :end-column 16, :arglists (quote ([x]))}, :name transmorphic.core/reverted?, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 295, :end-line 295, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, IFinialize {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 127, :column 14, :end-line 127, :end-column 24, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {finalize [[self]]}}}, :protocol-symbol true, :name transmorphic.core/IFinialize, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :column 1, :line 127, :protocol-info {:methods {finalize [[self]]}}, :info nil, :end-line 127, :impls #{}, :doc nil, :jsdoc ("@interface")}, rerender! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 973, :column 7, :end-line 973, :end-column 16, :arglists (quote ([self val]))}, :name transmorphic.core/rerender!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([self val]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 973, :end-line 973, :max-fixed-arity 2, :fn-var true, :arglists (quote ([self val]))}, unwrap-submorphs {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 372, :column 7, :end-line 372, :end-column 23, :arglists (quote ([submorphs render-context]))}, :name transmorphic.core/unwrap-submorphs, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 23, :method-params ([submorphs render-context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 372, :end-line 372, :max-fixed-arity 2, :fn-var true, :arglists (quote ([submorphs render-context]))}, remove-morph! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1024, :column 7, :end-line 1024, :end-column 20, :arglists (quote ([x]))}, :name transmorphic.core/remove-morph!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1024, :end-line 1024, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, get-cached {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1032, :column 7, :end-line 1032, :end-column 17, :arglists (quote ([state component]))}, :name transmorphic.core/get-cached, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 17, :method-params ([state component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1032, :end-line 1032, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state component]))}, refresh-root {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 330, :column 8, :end-line 330, :end-column 20, :private true, :arglists (quote ([state] [state patch])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state patch]), :arglists ([state] [state patch]), :arglists-meta (nil nil)}}, :private true, :name transmorphic.core/refresh-root, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([state] [state patch]), :arglists ([state] [state patch]), :arglists-meta (nil nil)}, :method-params ([state] [state patch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 330, :end-line 330, :max-fixed-arity 2, :fn-var true, :arglists ([state] [state patch])}, html5TransformOriginProperty {:name transmorphic.core/html5TransformOriginProperty, :file "src/cljc/transmorphic/core.cljs", :line 92, :column 1, :end-line 92, :end-column 34, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 92, :column 6, :end-line 92, :end-column 34}}, ->t_transmorphic$core31379 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([set-root! app-state component props target data _ meta31380])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name transmorphic.core/->t_transmorphic$core31379, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([set-root! app-state component props target data _ meta31380]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 1146, :max-fixed-arity 8, :fn-var true, :arglists (quote ([set-root! app-state component props target data _ meta31380])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_transmorphic$core31376 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([set-root! app-state component props target data _ meta31377])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name transmorphic.core/->t_transmorphic$core31376, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([set-root! app-state component props target data _ meta31377]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 6, :factory :positional, :line 1146, :max-fixed-arity 8, :fn-var true, :arglists (quote ([set-root! app-state component props target data _ meta31377])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, finalize {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 128, :column 4, :end-line 128, :end-column 12, :protocol transmorphic.core/IFinialize, :doc nil, :arglists (quote ([self]))}, :protocol transmorphic.core/IFinialize, :name transmorphic.core/finalize, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 12, :method-params ([self]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 128, :max-fixed-arity 1, :fn-var true, :arglists (quote ([self])), :doc nil}, consolidate-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 503, :column 7, :end-line 503, :end-column 28, :arglists (quote ([state component redefined?]))}, :name transmorphic.core/consolidate-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 28, :method-params ([state component redefined?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 503, :end-line 503, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state component redefined?]))}, ellipse* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/ellipse*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 181, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, render-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 154, :column 7, :end-line 154, :end-column 19, :arglists (quote ([morph]))}, :name transmorphic.core/render-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 19, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 154, :end-line 154, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, t_transmorphic$core30861 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillReceiveProps cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/t_transmorphic$core30861, :file "src/cljc/transmorphic/core.cljs", :type true, :anonymous true, :column 3, :line 155, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, map->html* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30977])), :file nil}, :name transmorphic.core/map->html*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30977]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 250, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30977]))}, IMorph? {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 28, :column 14, :end-line 28, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {morph? [[x]]}}}, :protocol-symbol true, :name transmorphic.core/IMorph?, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :column 1, :line 28, :protocol-info {:methods {morph? [[x]]}}, :info nil, :end-line 28, :impls #{transmorphic.core/io* transmorphic.core/ace* transmorphic.core/listmorph* transmorphic.core/checkbox* transmorphic.core/ellipse* transmorphic.core/div* transmorphic.core/html* transmorphic.core/text* transmorphic.core/image* transmorphic.core/rectangle*}, :doc nil, :jsdoc ("@interface")}, rectangle {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 175, :column 11, :end-line 175, :end-column 20, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/rectangle, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 175, :end-line 175, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, ->checkbox* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->checkbox*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 276, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, text {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 224, :column 11, :end-line 224, :end-column 15, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/text, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, image* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/image*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 200, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, meta-focus {:name transmorphic.core/meta-focus, :file "src/cljc/transmorphic/core.cljs", :line 21, :column 1, :end-line 21, :end-column 16, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 21, :column 6, :end-line 21, :end-column 16}}, ->html* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->html*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 250, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, html {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 250, :column 11, :end-line 250, :end-column 15, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/html, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 250, :end-line 250, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, update-component! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 958, :column 7, :end-line 958, :end-column 24, :arglists (quote ([component-id new-state]))}, :name transmorphic.core/update-component!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([component-id new-state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 958, :end-line 958, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component-id new-state]))}, consolidate {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 470, :column 7, :end-line 470, :end-column 18, :arglists (quote ([x store-fn key prefix state redefined?]))}, :name transmorphic.core/consolidate, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([x store-fn key prefix state redefined?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 470, :end-line 470, :max-fixed-arity 6, :fn-var true, :arglists (quote ([x store-fn key prefix state redefined?]))}, ->t_transmorphic$core30858 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillReceiveProps cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([render-morph morph meta30859])), :file nil}, :protocols #{om.core/IRender om.core/IWillReceiveProps cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/->t_transmorphic$core30858, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([render-morph morph meta30859]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 155, :max-fixed-arity 3, :fn-var true, :arglists (quote ([render-morph morph meta30859])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, copy-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 741, :column 8, :end-line 741, :end-column 22, :private true, :arglists (quote ([state {:keys [ref new-component-id new-id]}]))}, :private true, :name transmorphic.core/copy-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([state p__31195]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 741, :end-line 741, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref new-component-id new-id]}]))}, did-mount {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 134, :column 4, :end-line 134, :end-column 13, :protocol transmorphic.core/IDidMount, :doc nil, :arglists (quote ([self]))}, :protocol transmorphic.core/IDidMount, :name transmorphic.core/did-mount, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 13, :method-params ([self]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 133, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([self])), :doc nil}, map->text* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30937])), :file nil}, :name transmorphic.core/map->text*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30937]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 224, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30937]))}, ->text* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->text*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 224, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, add-component! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1062, :column 7, :end-line 1062, :end-column 21, :arglists (quote ([x component]))}, :name transmorphic.core/add-component!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :method-params ([x component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1062, :end-line 1062, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x component]))}, pi {:name transmorphic.core/pi, :file "src/cljc/transmorphic/core.cljs", :line 67, :column 1, :end-line 67, :end-column 8, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 67, :column 6, :end-line 67, :end-column 8}}, set-root! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1143, :column 7, :end-line 1143, :end-column 16, :arglists (quote ([app-state component props target]))}, :name transmorphic.core/set-root!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([app-state component props target]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1143, :end-line 1143, :max-fixed-arity 4, :fn-var true, :arglists (quote ([app-state component props target]))}, create-abstraction! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 884, :column 7, :end-line 884, :end-column 26, :arglists (quote ([editor morph {:keys [ns name new-source]}]))}, :name transmorphic.core/create-abstraction!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 26, :method-params ([editor morph p__31228]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 884, :end-line 884, :max-fixed-arity 3, :fn-var true, :arglists (quote ([editor morph {:keys [ns name new-source]}]))}, revert-history! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 301, :column 7, :end-line 301, :end-column 22, :arglists (quote ([x history-idx]))}, :name transmorphic.core/revert-history!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([x history-idx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 301, :end-line 301, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x history-idx]))}, ->ace* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->ace*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 257, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, render-io {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 237, :column 7, :end-line 237, :end-column 16, :arglists (quote ([{:keys [morph-id props submorphs]} owner]))}, :name transmorphic.core/render-io, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([p__30951 owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [morph-id props submorphs]} owner]))}, set-root {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 863, :column 7, :end-line 863, :end-column 15, :arglists (quote ([universe root-component root-props]))}, :name transmorphic.core/set-root, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 15, :method-params ([universe root-component root-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 863, :end-line 863, :max-fixed-arity 3, :fn-var true, :arglists (quote ([universe root-component root-props]))}, move-morph! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1009, :column 7, :end-line 1009, :end-column 18, :arglists (quote ([x new-parent]))}, :name transmorphic.core/move-morph!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([x new-parent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1009, :end-line 1009, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x new-parent]))}, current-namespace {:name transmorphic.core/current-namespace, :file "src/cljc/transmorphic/core.cljs", :line 1141, :column 1, :end-line 1141, :end-column 23, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1141, :column 6, :end-line 1141, :end-column 23}}, get-owners-morphs {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 800, :column 7, :end-line 800, :end-column 24, :arglists (quote ([state owner]))}, :name transmorphic.core/get-owners-morphs, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 800, :end-line 800, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, ->io* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->io*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 246, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, update-abstraction! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 878, :column 7, :end-line 878, :end-column 26, :arglists (quote ([editor component {:keys [ns name new-source]}]))}, :name transmorphic.core/update-abstraction!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 26, :method-params ([editor component p__31223]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 878, :end-line 878, :max-fixed-arity 3, :fn-var true, :arglists (quote ([editor component {:keys [ns name new-source]}]))}, update-dynamic-props! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 321, :column 7, :end-line 321, :end-column 28, :arglists (quote ([morph cursor-pos]))}, :name transmorphic.core/update-dynamic-props!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 28, :method-params ([morph cursor-pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 321, :end-line 321, :max-fixed-arity 2, :fn-var true, :arglists (quote ([morph cursor-pos]))}, set-prop {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 633, :column 7, :end-line 633, :end-column 15, :arglists (quote ([state {:keys [ref prop value]}]))}, :name transmorphic.core/set-prop, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 15, :method-params ([state p__31157]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 633, :end-line 633, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref prop value]}]))}, t_transmorphic$core31376 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name transmorphic.core/t_transmorphic$core31376, :file "src/cljc/transmorphic/core.cljs", :type true, :anonymous true, :column 6, :line 1146, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, io {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 246, :column 11, :end-line 246, :end-column 13, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/io, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 13, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 246, :end-line 246, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, move-component! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1078, :column 7, :end-line 1078, :end-column 22, :arglists (quote ([component new-parent]))}, :name transmorphic.core/move-component!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([component new-parent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1078, :end-line 1078, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component new-parent]))}, ->t_transmorphic$core30861 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender om.core/IWillReceiveProps cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([render-morph morph meta30862])), :file nil}, :protocols #{om.core/IRender om.core/IWillReceiveProps cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/->t_transmorphic$core30861, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([render-morph morph meta30862]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 155, :max-fixed-arity 3, :fn-var true, :arglists (quote ([render-morph morph meta30862])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t_transmorphic$core30858 {:num-fields 3, :protocols #{om.core/IRender om.core/IWillReceiveProps cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/t_transmorphic$core30858, :file "src/cljc/transmorphic/core.cljs", :type true, :anonymous true, :column 3, :line 155, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, IDidMount {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 133, :column 14, :end-line 133, :end-column 23, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {did-mount [[self]]}}}, :protocol-symbol true, :name transmorphic.core/IDidMount, :file "src/cljc/transmorphic/core.cljs", :end-column 23, :column 1, :line 133, :protocol-info {:methods {did-mount [[self]]}}, :info nil, :end-line 133, :impls #{}, :doc nil, :jsdoc ("@interface")}, map->div* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30866])), :file nil}, :name transmorphic.core/map->div*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30866]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 170, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30866]))}, morph-class {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 69, :column 7, :end-line 69, :end-column 18, :arglists (quote ([props]))}, :name transmorphic.core/morph-class, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, refresh {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 131, :column 4, :end-line 131, :end-column 11, :protocol transmorphic.core/IRefresh, :doc nil, :arglists (quote ([self props]))}, :protocol transmorphic.core/IRefresh, :name transmorphic.core/refresh, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 11, :method-params ([self props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 130, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([self props])), :doc nil}, orphanize! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1020, :column 7, :end-line 1020, :end-column 17, :arglists (quote ([morph]))}, :name transmorphic.core/orphanize!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 17, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1020, :end-line 1020, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, copy-morph! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1091, :column 7, :end-line 1091, :end-column 18, :arglists (quote ([morph]))}, :name transmorphic.core/copy-morph!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1091, :end-line 1091, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, IInitialize {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 124, :column 14, :end-line 124, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {initialize [[self]]}}}, :protocol-symbol true, :name transmorphic.core/IInitialize, :file "src/cljc/transmorphic/core.cljs", :end-column 25, :column 1, :line 124, :protocol-info {:methods {initialize [[self]]}}, :info nil, :end-line 124, :impls #{}, :doc nil, :jsdoc ("@interface")}, text* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/text*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 224, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->image* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->image*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 200, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, checkbox {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 276, :column 11, :end-line 276, :end-column 19, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/checkbox, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 276, :end-line 276, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, rectangle* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/rectangle*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 175, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, html-attributes {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 83, :column 7, :end-line 83, :end-column 22, :arglists (quote ([props ident]))}, :name transmorphic.core/html-attributes, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([props ident]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 2, :fn-var true, :arglists (quote ([props ident]))}, move-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 855, :column 8, :end-line 855, :end-column 18, :private true, :arglists (quote ([state {:keys [ref new-parent-ref]}]))}, :private true, :name transmorphic.core/move-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([state p__31218]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 855, :end-line 855, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref new-parent-ref]}]))}, remove-component! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 966, :column 7, :end-line 966, :end-column 24, :arglists (quote ([component-id]))}, :name transmorphic.core/remove-component!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([component-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 966, :end-line 966, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component-id]))}, remove-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 659, :column 7, :end-line 659, :end-column 19, :arglists (quote ([state {:keys [ref]}]))}, :name transmorphic.core/remove-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 19, :method-params ([state p__31163]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 659, :end-line 659, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref]}]))}, insert-component! {:name transmorphic.core/insert-component!, :file "src/cljc/transmorphic/core.cljs", :line 23, :column 1, :end-line 23, :end-column 37, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 23, :column 20, :end-line 23, :end-column 37, :declared true}}, morphic-read {:name transmorphic.core/morphic-read, :file "src/cljc/transmorphic/core.cljs", :line 34, :column 1, :end-line 34, :end-column 22, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 34, :column 10, :end-line 34, :end-column 22, :declared true}}, abstraction->ns {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 58, :column 7, :end-line 58, :end-column 22, :arglists (quote ([abstraction & {:keys [ns path]}])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(abstraction {:keys [ns path]})], :arglists ([abstraction & {:keys [ns path]}]), :arglists-meta (nil)}}, :name transmorphic.core/abstraction->ns, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(abstraction {:keys [ns path]})], :arglists ([abstraction & {:keys [ns path]}]), :arglists-meta (nil)}, :method-params [(abstraction {:keys [ns path]})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists ([abstraction & {:keys [ns path]}])}, mark-as-derived {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 342, :column 7, :end-line 342, :end-column 22, :arglists (quote ([state morph]))}, :name transmorphic.core/mark-as-derived, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([state morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 342, :end-line 342, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state morph]))}, t_transmorphic$core31379 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name transmorphic.core/t_transmorphic$core31379, :file "src/cljc/transmorphic/core.cljs", :type true, :anonymous true, :column 6, :line 1146, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, mark-path-dirty {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 935, :column 7, :end-line 935, :end-column 22, :arglists (quote ([state x])), :doc "Mark the owner chain leadin up the the entity x\n   as dirty, such that a rerendering is ensured."}, :name transmorphic.core/mark-path-dirty, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([state x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 935, :end-line 935, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state x])), :doc "Mark the owner chain leadin up the the entity x\n   as dirty, such that a rerendering is ensured."}, update-namespace! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 872, :column 7, :end-line 872, :end-column 24, :arglists (quote ([namespace-name new-source cb]))}, :name transmorphic.core/update-namespace!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([namespace-name new-source cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 872, :end-line 872, :max-fixed-arity 3, :fn-var true, :arglists (quote ([namespace-name new-source cb]))}, map->ace* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30993])), :file nil}, :name transmorphic.core/map->ace*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30993]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 257, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30993]))}, ace* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/ace*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 257, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ace {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 257, :column 11, :end-line 257, :end-column 14, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/ace, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 257, :end-line 257, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, get-root-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1035, :column 7, :end-line 1035, :end-column 21, :arglists (quote ([state component])), :doc "Find the root morph of a certain component."}, :name transmorphic.core/get-root-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :method-params ([state component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1035, :end-line 1035, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state component])), :doc "Find the root morph of a certain component."}, tx-queue {:name transmorphic.core/tx-queue, :file "src/cljc/transmorphic/core.cljs", :line 905, :column 1, :end-line 905, :end-column 14, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 905, :column 6, :end-line 905, :end-column 14}}, add-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 719, :column 7, :end-line 719, :end-column 20, :arglists (quote ([state {:keys [ref new-parent-ref], :as args}]))}, :name transmorphic.core/add-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :method-params ([state p__31180]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 719, :end-line 719, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref new-parent-ref], :as args}]))}, store-morph! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 378, :column 7, :end-line 378, :end-column 19, :arglists (quote ([state morph redefined?]))}, :name transmorphic.core/store-morph!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 19, :method-params ([state morph redefined?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 378, :end-line 378, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state morph redefined?]))}, set-props {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 620, :column 7, :end-line 620, :end-column 16, :arglists (quote ([state {:keys [ref props->values]}]))}, :name transmorphic.core/set-props, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([state p__31150]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 620, :end-line 620, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref props->values]}]))}, io* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/io*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 246, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, IComponent? {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 31, :column 14, :end-line 31, :end-column 25, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {component? [[x]]}}}, :protocol-symbol true, :name transmorphic.core/IComponent?, :file "src/cljc/transmorphic/core.cljs", :end-column 25, :column 1, :line 31, :protocol-info {:methods {component? [[x]]}}, :info nil, :end-line 31, :impls #{transmorphic.core/io* transmorphic.core/ace* transmorphic.core/listmorph* transmorphic.core/checkbox* transmorphic.core/ellipse* transmorphic.core/div* transmorphic.core/html* transmorphic.core/text* transmorphic.core/image* transmorphic.core/rectangle*}, :doc nil, :jsdoc ("@interface")}, map->checkbox* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__31034])), :file nil}, :name transmorphic.core/map->checkbox*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__31034]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 276, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__31034]))}, uuid-from {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1084, :column 7, :end-line 1084, :end-column 16, :arglists (quote ([morph-id]))}, :name transmorphic.core/uuid-from, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([morph-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1084, :end-line 1084, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph-id]))}, t_transmorphic$core30959 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/t_transmorphic$core30959, :file "src/cljc/transmorphic/core.cljs", :type true, :anonymous true, :column 3, :line 239, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, shape-style {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 94, :column 7, :end-line 94, :end-column 18, :arglists (quote ([props]))}, :name transmorphic.core/shape-style, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, get-root-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1046, :column 7, :end-line 1046, :end-column 25, :arglists (quote ([state component])), :doc "Some component may render as their root\n   an actual component."}, :name transmorphic.core/get-root-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 25, :method-params ([state component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1046, :end-line 1046, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state component])), :doc "Some component may render as their root\n   an actual component."}, map->listmorph* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__31009])), :file nil}, :name transmorphic.core/map->listmorph*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__31009]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 268, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__31009]))}, set-prop! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 983, :column 7, :end-line 983, :end-column 16, :arglists (quote ([x prop-name prop-value]))}, :name transmorphic.core/set-prop!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([x prop-name prop-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 983, :end-line 983, :max-fixed-arity 3, :fn-var true, :arglists (quote ([x prop-name prop-value]))}, IWillReceiveProps {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 136, :column 14, :end-line 136, :end-column 31, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {will-receive-props [[self next-props]]}}}, :protocol-symbol true, :name transmorphic.core/IWillReceiveProps, :file "src/cljc/transmorphic/core.cljs", :end-column 31, :column 1, :line 136, :protocol-info {:methods {will-receive-props [[self next-props]]}}, :info nil, :end-line 136, :impls #{}, :doc nil, :jsdoc ("@interface")}, IRender {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 139, :column 14, :end-line 139, :end-column 21, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {render [[self props submorphs render-ctx]]}}}, :protocol-symbol true, :name transmorphic.core/IRender, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :column 1, :line 139, :protocol-info {:methods {render [[self props submorphs render-ctx]]}}, :info nil, :end-line 139, :impls #{}, :doc nil, :jsdoc ("@interface")}, reload-hook {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1111, :column 7, :end-line 1111, :end-column 18, :arglists (quote ([args]))}, :name transmorphic.core/reload-hook, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([args]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1111, :end-line 1111, :max-fixed-arity 1, :fn-var true, :arglists (quote ([args]))}, morph? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 29, :column 4, :end-line 29, :end-column 10, :protocol transmorphic.core/IMorph?, :doc nil, :arglists (quote ([x]))}, :protocol transmorphic.core/IMorph?, :name transmorphic.core/morph?, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 10, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 29, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc nil}, listmorph* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/listmorph*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 268, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, html5TransformProperty {:name transmorphic.core/html5TransformProperty, :file "src/cljc/transmorphic/core.cljs", :line 91, :column 1, :end-line 91, :end-column 28, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 91, :column 6, :end-line 91, :end-column 28}}, ->rectangle* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->rectangle*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 175, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, get-abstraction-info {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 62, :column 7, :end-line 62, :end-column 27, :arglists (quote ([fn-name]))}, :name transmorphic.core/get-abstraction-info, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 27, :method-params ([fn-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([fn-name]))}, history-count {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 298, :column 7, :end-line 298, :end-column 20, :arglists (quote ([]))}, :name transmorphic.core/history-count, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 298, :end-line 298, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-reconciler {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 590, :column 7, :end-line 590, :end-column 24, :arglists (quote ([state ref-to-changed]))}, :name transmorphic.core/update-reconciler, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([state ref-to-changed]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 590, :end-line 590, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state ref-to-changed]))}, listmorph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 268, :column 11, :end-line 268, :end-column 20, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/listmorph, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, morphic-mutate {:name transmorphic.core/morphic-mutate, :file "src/cljc/transmorphic/core.cljs", :line 34, :column 1, :end-line 34, :end-column 37, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 34, :column 23, :end-line 34, :end-column 37, :declared true}}, div {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 170, :column 11, :end-line 170, :end-column 14, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/div, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 14, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 170, :end-line 170, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, get-morph-tree {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 424, :column 7, :end-line 424, :end-column 21, :arglists (quote ([state ref]))}, :name transmorphic.core/get-morph-tree, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :method-params ([state ref]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 424, :end-line 424, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state ref]))}, morph-migration-queue {:name transmorphic.core/morph-migration-queue, :file "src/cljc/transmorphic/core.cljs", :line 26, :column 1, :end-line 26, :end-column 27, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 26, :column 6, :end-line 26, :end-column 27}}, update-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 891, :column 7, :end-line 891, :end-column 23, :arglists (quote ([state {:keys [component-id new-local-state]}]))}, :name transmorphic.core/update-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 23, :method-params ([state p__31233]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 891, :end-line 891, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [component-id new-local-state]}]))}, get-root {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1058, :column 7, :end-line 1058, :end-column 15, :arglists (quote ([state c]))}, :name transmorphic.core/get-root, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 15, :method-params ([state c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1058, :end-line 1058, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state c]))}, wrap-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 534, :column 7, :end-line 534, :end-column 21, :arglists (quote ([component render-context]))}, :name transmorphic.core/wrap-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :method-params ([component render-context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 534, :end-line 534, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component render-context]))}, map->rectangle* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30882])), :file nil}, :name transmorphic.core/map->rectangle*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30882]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 175, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30882]))}, get-ref {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 948, :column 7, :end-line 948, :end-column 14, :arglists (quote ([x] [state x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [state x]), :arglists ([x] [state x]), :arglists-meta (nil nil)}}, :name transmorphic.core/get-ref, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [state x]), :arglists ([x] [state x]), :arglists-meta (nil nil)}, :method-params ([x] [state x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 948, :end-line 948, :max-fixed-arity 2, :fn-var true, :arglists ([x] [state x])}, initialize {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 125, :column 4, :end-line 125, :end-column 14, :protocol transmorphic.core/IInitialize, :doc nil, :arglists (quote ([self]))}, :protocol transmorphic.core/IInitialize, :name transmorphic.core/initialize, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 14, :method-params ([self]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([self])), :doc nil}, ->ellipse* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->ellipse*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 181, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, map->io* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30964])), :file nil}, :name transmorphic.core/map->io*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30964]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 246, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30964]))}, div* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/div*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 170, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, move-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 822, :column 7, :end-line 822, :end-column 21, :arglists (quote ([state {:keys [ref new-parent-ref]}]))}, :name transmorphic.core/move-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :method-params ([state p__31209]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 822, :end-line 822, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref new-parent-ref]}]))}, set-props! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 994, :column 7, :end-line 994, :end-column 17, :arglists (quote ([x props->values]))}, :name transmorphic.core/set-props!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 17, :method-params ([x props->values]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 994, :end-line 994, :max-fixed-arity 2, :fn-var true, :arglists (quote ([x props->values]))}, render {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 140, :column 4, :end-line 140, :end-column 10, :protocol transmorphic.core/IRender, :doc nil, :arglists (quote ([self props submorphs render-ctx]))}, :protocol transmorphic.core/IRender, :name transmorphic.core/render, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 10, :method-params ([self props submorphs render-ctx]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 139, :end-line 140, :max-fixed-arity 4, :fn-var true, :arglists (quote ([self props submorphs render-ctx])), :doc nil}, become {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 612, :column 7, :end-line 612, :end-column 13, :arglists (quote ([state ref-a ref-b])), :doc "Inserts a redirect into the\n   identity lookup table at ref-a, that\n   immediately dispatches to the\n   identity ref-b"}, :name transmorphic.core/become, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 13, :method-params ([state ref-a ref-b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 612, :end-line 612, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state ref-a ref-b])), :doc "Inserts a redirect into the\n   identity lookup table at ref-a, that\n   immediately dispatches to the\n   identity ref-b"}, filepath->ns {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 47, :column 7, :end-line 47, :end-column 19, :arglists (quote ([path]))}, :name transmorphic.core/filepath->ns, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 19, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, IRefresh {:meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 130, :column 14, :end-line 130, :end-column 22, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {refresh [[self props]]}}}, :protocol-symbol true, :name transmorphic.core/IRefresh, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :column 1, :line 130, :protocol-info {:methods {refresh [[self props]]}}, :info nil, :end-line 130, :impls #{}, :doc nil, :jsdoc ("@interface")}, t_transmorphic$core30954 {:num-fields 8, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/t_transmorphic$core30954, :file "src/cljc/transmorphic/core.cljs", :type true, :anonymous true, :column 3, :line 239, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, migrate-changes {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 749, :column 7, :end-line 749, :end-column 22, :arglists (quote ([state {:keys [from to]}]))}, :name transmorphic.core/migrate-changes, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([state p__31200]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 749, :end-line 749, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [from to]}]))}, detach-cache! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 314, :column 7, :end-line 314, :end-column 20, :arglists (quote ([x]))}, :name transmorphic.core/detach-cache!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, map->ellipse* {:protocol-inline nil, :meta {:internal-ctor true, :factory :map, :arglists (quote ([G__30898])), :file nil}, :name transmorphic.core/map->ellipse*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([G__30898]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__30898]))}, reverted-entities {:name transmorphic.core/reverted-entities, :file "src/cljc/transmorphic/core.cljs", :line 293, :column 1, :end-line 293, :end-column 23, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 293, :column 6, :end-line 293, :end-column 23}}, will-receive-props {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 137, :column 4, :end-line 137, :end-column 22, :protocol transmorphic.core/IWillReceiveProps, :doc nil, :arglists (quote ([self next-props]))}, :protocol transmorphic.core/IWillReceiveProps, :name transmorphic.core/will-receive-props, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 22, :method-params ([self next-props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 137, :max-fixed-arity 2, :fn-var true, :arglists (quote ([self next-props])), :doc nil}, align-with-stored {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 437, :column 7, :end-line 437, :end-column 24, :arglists (quote ([x stored owner state]))}, :name transmorphic.core/align-with-stored, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([x stored owner state]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 437, :end-line 437, :max-fixed-arity 4, :fn-var true, :arglists (quote ([x stored owner state]))}, remove-component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 691, :column 7, :end-line 691, :end-column 23, :arglists (quote ([state {:keys [ref]}]))}, :name transmorphic.core/remove-component, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 23, :method-params ([state p__31168]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 691, :end-line 691, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref]}]))}, submorphs->flatten {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 354, :column 7, :end-line 354, :end-column 25, :arglists (quote ([submorphs] [submorphs {idx? :idx, :as render-ctx}])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([submorphs] [submorphs {idx? :idx, :as render-ctx}]), :arglists ([submorphs] [submorphs {idx? :idx, :as render-ctx}]), :arglists-meta (nil nil)}}, :name transmorphic.core/submorphs->flatten, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 25, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([submorphs] [submorphs {idx? :idx, :as render-ctx}]), :arglists ([submorphs] [submorphs {idx? :idx, :as render-ctx}]), :arglists-meta (nil nil)}, :method-params ([submorphs] [submorphs {idx? :idx, :as render-ctx}]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 354, :end-line 354, :max-fixed-arity 2, :fn-var true, :arglists ([submorphs] [submorphs {idx? :idx, :as render-ctx}])}, checkbox* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/checkbox*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 276, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, ->listmorph* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->listmorph*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 268, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, text-style {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 208, :column 7, :end-line 208, :end-column 17, :arglists (quote ([props]))}, :name transmorphic.core/text-style, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 17, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 208, :end-line 208, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, orphanize {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 724, :column 7, :end-line 724, :end-column 16, :arglists (quote ([state {:keys [ref]}]))}, :name transmorphic.core/orphanize, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([state p__31185]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 724, :end-line 724, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref]}]))}, eval-suspended-props {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 142, :column 7, :end-line 142, :end-column 27, :arglists (quote ([world-state morph]))}, :name transmorphic.core/eval-suspended-props, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 27, :method-params ([world-state morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 2, :fn-var true, :arglists (quote ([world-state morph]))}, ->t_transmorphic$core30959 {:protocol-inline nil, :meta {:anonymous true, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([render-io p__30951 owner map__30957 morph-id props submorphs meta30960])), :file nil}, :protocols #{om.core/IRender cljs.core/IMeta om.core/IDidMount cljs.core/IWithMeta}, :name transmorphic.core/->t_transmorphic$core30959, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([render-io p__30951 owner map__30957 morph-id props submorphs meta30960]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :line 239, :max-fixed-arity 8, :fn-var true, :arglists (quote ([render-io p__30951 owner map__30957 morph-id props submorphs meta30960])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, component? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 32, :column 4, :end-line 32, :end-column 14, :protocol transmorphic.core/IComponent?, :doc nil, :arglists (quote ([x]))}, :protocol transmorphic.core/IComponent?, :name transmorphic.core/component?, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 14, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc nil}, add-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 699, :column 7, :end-line 699, :end-column 16, :arglists (quote ([state {:keys [ref new-parent-ref]}]))}, :name transmorphic.core/add-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :method-params ([state p__31175]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 699, :end-line 699, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state {:keys [ref new-parent-ref]}]))}, index-of {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 907, :column 7, :end-line 907, :end-column 15, :arglists (quote ([v item])), :doc "return the index of the supplied item, or nil"}, :name transmorphic.core/index-of, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 15, :method-params ([v item]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 907, :end-line 907, :max-fixed-arity 2, :fn-var true, :arglists (quote ([v item])), :doc "return the index of the supplied item, or nil"}, ellipse {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 181, :column 11, :end-line 181, :end-column 18, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/ellipse, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}, refresh-scene! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 1004, :column 7, :end-line 1004, :end-column 21, :arglists (quote ([& skip])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(skip)], :arglists ([& skip]), :arglists-meta (nil)}}, :name transmorphic.core/refresh-scene!, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(skip)], :arglists ([& skip]), :arglists-meta (nil)}, :method-params [(skip)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 1004, :end-line 1004, :max-fixed-arity 0, :fn-var true, :arglists ([& skip])}, wrap-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 569, :column 7, :end-line 569, :end-column 17, :arglists (quote ([morph render-context]))}, :name transmorphic.core/wrap-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 17, :method-params ([morph render-context]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 569, :end-line 569, :max-fixed-arity 2, :fn-var true, :arglists (quote ([morph render-context]))}, store-component! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 396, :column 7, :end-line 396, :end-column 23, :arglists (quote ([state component redefined?]))}, :name transmorphic.core/store-component!, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 23, :method-params ([state component redefined?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 396, :end-line 396, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state component redefined?]))}, morphic-uuid {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([morph]))}, :name transmorphic.core/morphic-uuid, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 19, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, get-owners-components {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 811, :column 7, :end-line 811, :end-column 28, :arglists (quote ([state owner]))}, :name transmorphic.core/get-owners-components, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 28, :method-params ([state owner]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 811, :end-line 811, :max-fixed-arity 2, :fn-var true, :arglists (quote ([state owner]))}, render-component* {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 511, :column 7, :end-line 511, :end-column 24, :arglists (quote ([self {:keys [state idx]}]))}, :name transmorphic.core/render-component*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([self p__31124]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 511, :end-line 511, :max-fixed-arity 2, :fn-var true, :arglists (quote ([self {:keys [state idx]}]))}, component-migration-queue {:name transmorphic.core/component-migration-queue, :file "src/cljc/transmorphic/core.cljs", :line 25, :column 1, :end-line 25, :end-column 31, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 25, :column 6, :end-line 25, :end-column 31}}, ->div* {:protocol-inline nil, :meta {:internal-ctor true, :factory :positional, :arglists (quote ([morph-id type props submorphs morph->html root?])), :file nil}, :name transmorphic.core/->div*, :variadic false, :file "src/cljc/transmorphic/core.cljs", :method-params ([morph-id type props submorphs morph->html root?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 170, :max-fixed-arity 6, :fn-var true, :arglists (quote ([morph-id type props submorphs morph->html root?]))}, morph-style {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 72, :column 7, :end-line 72, :end-column 18, :arglists (quote ([props]))}, :name transmorphic.core/morph-style, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 18, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props]))}, html* {:num-fields 6, :protocols #{cljs.core/IRecord transmorphic.core/IComponent? cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted transmorphic.core/IMorph? cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name transmorphic.core/html*, :file "src/cljc/transmorphic/core.cljs", :type true, :column 1, :internal-ctor true, :line 250, :record true, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, get-world-ref {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 917, :column 7, :end-line 917, :end-column 20, :arglists (quote ([x] [state x])), :doc "Retrieve the reference to the part of the global morph tree\n   that corresponds to the entity x. In case x is a component,\n   return the path to the morph that is the root of the component.\n   x has to be stored already!", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [state x]), :arglists ([x] [state x]), :arglists-meta (nil nil)}}, :name transmorphic.core/get-world-ref, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 20, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [state x]), :arglists ([x] [state x]), :arglists-meta (nil nil)}, :method-params ([x] [state x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 917, :end-line 917, :max-fixed-arity 2, :fn-var true, :arglists ([x] [state x]), :doc "Retrieve the reference to the part of the global morph tree\n   that corresponds to the entity x. In case x is a component,\n   return the path to the morph that is the root of the component.\n   x has to be stored already!"}, consolidate-morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 507, :column 7, :end-line 507, :end-column 24, :arglists (quote ([state morph redefined?]))}, :name transmorphic.core/consolidate-morph, :variadic false, :file "src/cljc/transmorphic/core.cljs", :end-column 24, :method-params ([state morph redefined?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 507, :end-line 507, :max-fixed-arity 3, :fn-var true, :arglists (quote ([state morph redefined?]))}, image {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/core.cljs", :line 200, :column 11, :end-line 200, :end-column 16, :arglists (quote ([props & submorphs])), :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}}, :name transmorphic.core/image, :variadic true, :file "src/cljc/transmorphic/core.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(props submorphs)], :arglists ([props & submorphs]), :arglists-meta (nil)}, :method-params [(props submorphs)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 1, :fn-var true, :arglists ([props & submorphs])}}, :require-macros {transmorphic.core transmorphic.core, cljs.analyzer.macros cljs.analyzer.macros, om.core om.core, dom om.dom, om.dom om.dom, om om.core}, :cljs.analyzer/constants {:seen #{:y :active? :new-component-name :WebkitTransform target :path :new-id :did-mount :morph-id :cached :morph->html submorphs :new-source map__30957 :marginLeft morph :root? :source-location :io :checked? :maxHeight :reverted owner :rotation :update-props render-morph :color :new-component-id :key :maxWidth rectangle :borderRadius :parent meta30859 text meta30955 data :else props html :ref :dynamic? :scale :top morph-id :new-local-state :listStyleType set-root! :default :component/by-id :added :overflow morph->html :ns render-io :borderColor :name :namespace/by-name root? :value :minWidth :dirty? :reconciler :txs io :width :background :pivot-point :meta-data :cursor :type :update :marginTop :new-parent-ref :src :state :root-props _ checkbox :borderWidth :className p__30951 :allow-input :style :fontFamily :abstractions ace :dirac :borderStyle :render :keys meta30862 :WebkitTransformOrigin type :prototype meta30960 :from :props->values :opacity :id :compiling? :will-receive-props :prop :extent component :padding :redefined? :root-component :ellipse :url :editor listmorph div meta31380 :component-id :new-morph-id :position :uuid-state :morph-tree :image :WebkitTransition :class-name :abstraction app-state :x :fontSize :WebkitUserSelect :idx :relative? :uuid :target :sanity-hints :boxShadow quote :css-class :redirect :submorphs :arglists :on-change :morph/by-id meta31377 :local-state :update-txs :minHeight map__30952 :visibility ellipse :owner :rectangle :removed :current-target :abstraction/by-name :text-string :height :skip :polygon :left :html :ace-id :text :to cljs.user image :props :eval}, :order [:sanity-hints :dirac :meta-data :uuid-state :type :rectangle :ellipse :text :polygon :io :image :ns :path :abstractions :css-class :overflow :position :left :top :x :y :key :style :class-name :id :padding :WebkitTransform :WebkitTransformOrigin :borderStyle :rotation :scale :pivot-point :boxShadow :WebkitTransition :background :borderWidth :opacity :height :width :borderColor :visibility :borderRadius :props :dynamic? :value :relative? :eval :default :did-mount :will-receive-props :morph->html render-morph :arglists quote morph meta30859 meta30862 :morph-id :submorphs :root? morph-id type props submorphs morph->html root? div rectangle :extent :marginTop :marginLeft ellipse :src :url image :allow-input :WebkitUserSelect :fontFamily :fontSize :maxHeight :maxWidth :minHeight :minWidth :color :className :cursor :ref :text-string text :render render-io :keys owner p__30951 map__30952 meta30955 map__30957 meta30960 io :html html :ace-id ace :listStyleType listmorph :checked? :on-change checkbox :txs :reverted :prototype :update :root-component :root-props :state :morph-tree :morph/by-id :idx :dirty? :owner :component/by-id :component-id :local-state :reconciler :cached :parent :added :removed :active? :source-location :abstraction :name :redefined? :redirect :props->values :update-txs :update-props :prop :new-parent-ref :new-morph-id :new-id :new-component-id :from :to :namespace/by-name :new-source :editor :new-component-name :new-local-state :else :skip :uuid :current-target :compiling? cljs.user set-root! app-state component target data _ meta31377 :target meta31380 :abstraction/by-name]}, :doc nil}