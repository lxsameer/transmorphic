;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros, go-loop cljs.core.async.macros}, :excludes #{}, :name transmorphic.repl, :imports {XhrIo goog.net.XhrIo, EventType goog.events.EventType}, :requires {xhr goog.net.XhrIo, trt cljs.tools.reader.reader-types, goog.net.XhrIo goog.net.XhrIo, cljs.tools.reader cljs.tools.reader, EventType goog.events.EventType, goog.string goog.string, async cljs.core.async, cljs.js cljs.js, cljs.tools.reader.reader-types cljs.tools.reader.reader-types, cljs.core.async cljs.core.async, tr cljs.tools.reader, cljs.pprint cljs.pprint, s clojure.string, XhrIo goog.net.XhrIo, clojure.string clojure.string, cljs.reader cljs.reader}, :uses {timeout cljs.core.async, pprint cljs.pprint, <! cljs.core.async, close! cljs.core.async, chan cljs.core.async, onto-chan cljs.core.async, StringBuffer goog.string, >! cljs.core.async, read-string cljs.reader, put! cljs.core.async}, :defs {morph-defn {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 355, :column 7, :end-line 355, :end-column 17, :arglists (quote ([form ns]))}, :name transmorphic.repl/morph-defn, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 17, :method-params ([form ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 355, :end-line 355, :max-fixed-arity 2, :fn-var true, :arglists (quote ([form ns]))}, defmethod? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 238, :column 7, :end-line 238, :end-column 17, :arglists (quote ([form]))}, :name transmorphic.repl/defmethod?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 17, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, load-and-callback! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 74, :column 7, :end-line 74, :end-column 25, :arglists (quote ([name lang cb]))}, :name transmorphic.repl/load-and-callback!, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 25, :method-params ([name lang cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name lang cb]))}, init-compiler {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 368, :column 7, :end-line 368, :end-column 20, :arglists (quote ([cb]))}, :name transmorphic.repl/init-compiler, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 20, :method-params ([cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 368, :end-line 368, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cb]))}, skip-load? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 95, :column 8, :end-line 95, :end-column 18, :private true, :arglists (quote ([{:keys [name macros]}]))}, :private true, :name transmorphic.repl/skip-load?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 18, :method-params ([p__26593]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 95, :end-line 95, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [name macros]}]))}, do-load-goog {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 129, :column 8, :end-line 129, :end-column 20, :private true, :arglists (quote ([name cb]))}, :private true, :name transmorphic.repl/do-load-goog, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 20, :method-params ([name cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name cb]))}, *closure-index-mem* {:name transmorphic.repl/*closure-index-mem*, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 18, :column 1, :end-line 18, :end-column 25, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 18, :column 6, :end-line 18, :end-column 25}}, file-cache {:name transmorphic.repl/file-cache, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 66, :column 1, :end-line 66, :end-column 16, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 66, :column 6, :end-line 66, :end-column 16}}, update-ns-source! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 62, :column 7, :end-line 62, :end-column 24, :arglists (quote ([ns-name new-source cb]))}, :name transmorphic.repl/update-ns-source!, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 24, :method-params ([ns-name new-source cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ns-name new-source cb]))}, load {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 185, :column 7, :end-line 185, :end-column 11, :arglists (quote ([{:keys [name macros path file], :as full} cb]))}, :name transmorphic.repl/load, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 11, :method-params ([p__27041 cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [name macros path file], :as full} cb]))}, morph-eval-str {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 338, :column 7, :end-line 338, :end-column 21, :arglists (quote ([code] [code ns])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([code] [code ns]), :arglists ([code] [code ns]), :arglists-meta (nil nil)}}, :name transmorphic.repl/morph-eval-str, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([code] [code ns]), :arglists ([code] [code ns]), :arglists-meta (nil nil)}, :method-params ([code] [code ns]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 338, :end-line 338, :max-fixed-arity 2, :fn-var true, :arglists ([code] [code ns])}, get-ns-source {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 58, :column 7, :end-line 58, :end-column 20, :arglists (quote ([ns-name cb]))}, :name transmorphic.repl/get-ns-source, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 20, :method-params ([ns-name cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ns-name cb]))}, get-morph-essay-info {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 318, :column 7, :end-line 318, :end-column 27, :arglists (quote ([name cb]))}, :name transmorphic.repl/get-morph-essay-info, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 27, :method-params ([name cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 318, :end-line 318, :max-fixed-arity 2, :fn-var true, :arglists (quote ([name cb]))}, current-namespace {:name transmorphic.repl/current-namespace, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 16, :column 1, :end-line 16, :end-column 23, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 16, :column 6, :end-line 16, :end-column 23}}, purge-string! {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 253, :column 7, :end-line 253, :end-column 20, :arglists (quote ([rdr]))}, :name transmorphic.repl/purge-string!, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 20, :method-params ([rdr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 253, :end-line 253, :max-fixed-arity 1, :fn-var true, :arglists (quote ([rdr]))}, load-existing {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 102, :column 7, :end-line 102, :end-column 20, :arglists (quote ([cb {:keys [name macros]}]))}, :name transmorphic.repl/load-existing, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 20, :method-params ([cb p__26598]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 2, :fn-var true, :arglists (quote ([cb {:keys [name macros]}]))}, load-for-macro {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 169, :column 7, :end-line 169, :end-column 21, :arglists (quote ([path cb]))}, :name transmorphic.repl/load-for-macro, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 21, :method-params ([path cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 169, :end-line 169, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path cb]))}, closure-index {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 115, :column 7, :end-line 115, :end-column 20, :arglists (quote ([]))}, :name transmorphic.repl/closure-index, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, write-file {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 44, :column 7, :end-line 44, :end-column 17, :arglists (quote ([url new-source]))}, :name transmorphic.repl/write-file, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 17, :method-params ([url new-source]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url new-source]))}, load-cache {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 196, :column 7, :end-line 196, :end-column 17, :arglists (quote ([cstate s] [cstate s opts])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([cstate s] [cstate s opts]), :arglists ([cstate s] [cstate s opts]), :arglists-meta (nil nil)}}, :name transmorphic.repl/load-cache, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([cstate s] [cstate s opts]), :arglists ([cstate s] [cstate s opts]), :arglists-meta (nil nil)}, :method-params ([cstate s] [cstate s opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 196, :end-line 196, :max-fixed-arity 3, :fn-var true, :arglists ([cstate s] [cstate s opts])}, read-with-source-logger {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 260, :column 7, :end-line 260, :end-column 30, :arglists (quote ([src])), :doc "reads a single next obj from *current-code* :source"}, :name transmorphic.repl/read-with-source-logger, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 30, :method-params ([src]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 260, :end-line 260, :max-fixed-arity 1, :fn-var true, :arglists (quote ([src])), :doc "reads a single next obj from *current-code* :source"}, defmorph? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 248, :column 7, :end-line 248, :end-column 16, :arglists (quote ([form]))}, :name transmorphic.repl/defmorph?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 16, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 248, :end-line 248, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, make-reader {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 228, :column 7, :end-line 228, :end-column 18, :arglists (quote ([source & [file-name]])), :doc "Currently using direct instantiation of reader b/c there seems to be a bug\n  in tools reader regarding line number access, see comment", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(source [file-name])], :arglists ([source & [file-name]]), :arglists-meta (nil)}}, :name transmorphic.repl/make-reader, :variadic true, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(source [file-name])], :arglists ([source & [file-name]]), :arglists-meta (nil)}, :method-params [(source [file-name])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 1, :fn-var true, :arglists ([source & [file-name]]), :doc "Currently using direct instantiation of reader b/c there seems to be a bug\n  in tools reader regarding line number access, see comment"}, morph-libs {:name transmorphic.repl/morph-libs, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 20, :column 1, :end-line 20, :end-column 16, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 20, :column 6, :end-line 20, :end-column 16}}, read-objs {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 266, :column 7, :end-line 266, :end-column 16, :arglists (quote ([source & [{:keys [features line-offset column-offset], :as opts}]])), :doc "Reads sexps from source and returns them as a {:form :source :line\n  :column} map. Note: this is more that the typical reader gives us.", :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(source [{:keys [features line-offset column-offset], :as opts}])], :arglists ([source & [{:keys [features line-offset column-offset], :as opts}]]), :arglists-meta (nil)}}, :name transmorphic.repl/read-objs, :variadic true, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 1, :method-params [(source [{:keys [features line-offset column-offset], :as opts}])], :arglists ([source & [{:keys [features line-offset column-offset], :as opts}]]), :arglists-meta (nil)}, :method-params [(source [{:keys [features line-offset column-offset], :as opts}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 266, :end-line 266, :max-fixed-arity 1, :fn-var true, :arglists ([source & [{:keys [features line-offset column-offset], :as opts}]]), :doc "Reads sexps from source and returns them as a {:form :source :line\n  :column} map. Note: this is more that the typical reader gives us."}, defmulti? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 243, :column 7, :end-line 243, :end-column 16, :arglists (quote ([form]))}, :name transmorphic.repl/defmulti?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 16, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, name-of-def {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 234, :column 7, :end-line 234, :end-column 18, :arglists (quote ([form]))}, :name transmorphic.repl/name-of-def, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 18, :method-params ([form]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 234, :end-line 234, :max-fixed-arity 1, :fn-var true, :arglists (quote ([form]))}, is-foreign? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 181, :column 7, :end-line 181, :end-column 18, :arglists (quote ([path]))}, :name transmorphic.repl/is-foreign?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 18, :method-params ([path]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 181, :end-line 181, :max-fixed-arity 1, :fn-var true, :arglists (quote ([path]))}, morph-eval {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 326, :column 7, :end-line 326, :end-column 17, :arglists (quote ([m]))}, :name transmorphic.repl/morph-eval, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 17, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 326, :end-line 326, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m]))}, get-file {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 32, :column 7, :end-line 32, :end-column 15, :arglists (quote ([url]))}, :name transmorphic.repl/get-file, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 15, :method-params ([url]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([url]))}, extension->lang {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 68, :column 7, :end-line 68, :end-column 22, :arglists (quote ([extension]))}, :name transmorphic.repl/extension->lang, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 22, :method-params ([extension]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([extension]))}, load-foreign-lib {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 162, :column 7, :end-line 162, :end-column 23, :arglists (quote ([path cb]))}, :name transmorphic.repl/load-foreign-lib, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 23, :method-params ([path cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 162, :end-line 162, :max-fixed-arity 2, :fn-var true, :arglists (quote ([path cb]))}, do-load-other {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 142, :column 8, :end-line 142, :end-column 21, :private true, :arglists (quote ([name macros cb]))}, :private true, :name transmorphic.repl/do-load-other, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 21, :method-params ([name macros cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 142, :end-line 142, :max-fixed-arity 3, :fn-var true, :arglists (quote ([name macros cb]))}, st {:name transmorphic.repl/st, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 324, :column 1, :end-line 324, :end-column 8, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 324, :column 6, :end-line 324, :end-column 8}}, line-column-access {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 209, :column 8, :end-line 209, :end-column 26, :private true, :arglists (quote ([string]))}, :private true, :name transmorphic.repl/line-column-access, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 26, :method-params ([string]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 209, :end-line 209, :max-fixed-arity 1, :fn-var true, :arglists (quote ([string]))}, do-load-file {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 110, :column 8, :end-line 110, :end-column 20, :private true, :arglists (quote ([file cb]))}, :private true, :name transmorphic.repl/do-load-file, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :end-column 20, :method-params ([file cb]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 2, :fn-var true, :arglists (quote ([file cb]))}, foreign-libs {:name transmorphic.repl/foreign-libs, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 157, :column 1, :end-line 157, :end-column 18, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/repl.cljs", :line 157, :column 6, :end-line 157, :end-column 18}}}, :require-macros {cljs.core.async.macros cljs.core.async.macros, cljs.pprint cljs.pprint, cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:load :path :features :column-offset cljs-morphic.morph.window :js :ext goog.net.XhrIo :else :macros :ns :def-emits-var :name cljs-morphic.macros cljs-morphic.init-macro :value cljs.core :file :end-column :read-cond cljs-morphic.test :recur :verbose :preserve cljs-morphic.helper :source :allow ns :column :lang defmethod cljs.pprint :line :expr :end-line cljs.analyzer :context transmorphic.core :line-offset cljs-morphic.playground :error :require-macros :form :cljc defmulti :eof cljs-morphic.core goog.events :clj :cljs defmorph cljs-morphic.morph :buffer cljs-morphic.morph.editor transmorphic.playground cljs.user :eval}, :order [cljs-morphic.macros cljs-morphic.morph goog.net.XhrIo cljs-morphic.test cljs-morphic.helper cljs-morphic.init-macro goog.events cljs.analyzer cljs-morphic.morph.window cljs-morphic.morph.editor :clj :cljs :js :cljc :recur :else :error :lang :source :name :macros cljs.core cljs.pprint :path :file :ext :line :column defmethod defmulti defmorph :buffer :read-cond :allow :features :line-offset :column-offset :eof :preserve :end-line :end-column :form :eval :ns :context :verbose cljs-morphic.playground :expr :load :value :def-emits-var ns cljs.user :require-macros cljs-morphic.core transmorphic.playground transmorphic.core]}, :doc nil}