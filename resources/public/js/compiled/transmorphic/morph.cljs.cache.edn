;; Analyzed by ClojureScript 1.7.170
{:use-macros {defui om.next}, :excludes #{}, :name transmorphic.morph, :imports nil, :requires {om om.next, om.next om.next, gdom goog.dom, goog.dom goog.dom, transmorphic.core transmorphic.core, transmorphic.utils transmorphic.utils, transmorphic.repl transmorphic.repl, transmorphic.manipulation transmorphic.manipulation, transmorphic.symbolic transmorphic.symbolic}, :uses {ensure transmorphic.core, universe transmorphic.core, analyze-body! transmorphic.symbolic, get-ns-source transmorphic.repl, ellipse? transmorphic.symbolic, add-points transmorphic.utils, morph? transmorphic.core, get-root transmorphic.core, get-ref transmorphic.core, contains-rect? transmorphic.utils, eval-suspended-props transmorphic.core, component? transmorphic.core, instrument-body! transmorphic.symbolic}, :defs {get-props {:name transmorphic.morph/get-props, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 1, :end-line 264, :end-column 61, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 52, :end-line 264, :end-column 61, :declared true}}, Root {:name transmorphic.morph/Root, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 1, :end-line 15, :end-column 24, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 20, :end-line 15, :end-column 24, :declared true}}, Orphan {:name transmorphic.morph/Orphan, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 1, :end-line 15, :end-column 31, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 25, :end-line 15, :end-column 31, :declared true}}, morph-under-me {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 228, :column 7, :end-line 228, :end-column 21, :arglists (quote ([self] [self {:keys [morph-id component-id], :as current} ignoring ask-owner?])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([self] [self {:keys [morph-id component-id], :as current} ignoring ask-owner?]), :arglists ([self] [self {:keys [morph-id component-id], :as current} ignoring ask-owner?]), :arglists-meta (nil nil)}}, :name transmorphic.morph/morph-under-me, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([self] [self {:keys [morph-id component-id], :as current} ignoring ask-owner?]), :arglists ([self] [self {:keys [morph-id component-id], :as current} ignoring ask-owner?]), :arglists-meta (nil nil)}, :method-params ([self] [self {:keys [morph-id component-id], :as current} ignoring ask-owner?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 228, :end-line 228, :max-fixed-arity 4, :fn-var true, :arglists ([self] [self {:keys [morph-id component-id], :as current} ignoring ask-owner?])}, MorphView {:name transmorphic.morph/MorphView, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 1, :end-line 15, :end-column 60, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 51, :end-line 15, :end-column 60, :declared true}}, Part {:name transmorphic.morph/Part, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 1, :end-line 15, :end-column 36, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 32, :end-line 15, :end-column 36, :declared true}}, RootView {:name transmorphic.morph/RootView, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 1, :end-line 15, :end-column 50, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 42, :end-line 15, :end-column 50, :declared true}}, $morph {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 57, :column 7, :end-line 57, :end-column 13, :arglists (quote ([id] [id query?])), :doc "Get the morph that corresponding to the id.\n   We first assume id, is a global identifier.\n   If this fails, fall back to searching for\n   the next morph that carries a matching\n   :id property.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [id query?]), :arglists ([id] [id query?]), :arglists-meta (nil nil)}}, :name transmorphic.morph/$morph, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [id query?]), :arglists ([id] [id query?]), :arglists-meta (nil nil)}, :method-params ([id] [id query?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists ([id] [id query?]), :doc "Get the morph that corresponding to the id.\n   We first assume id, is a global identifier.\n   If this fails, fall back to searching for\n   the next morph that carries a matching\n   :id property."}, global-bounds {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 218, :column 7, :end-line 218, :end-column 20, :arglists (quote ([morph]))}, :name transmorphic.morph/global-bounds, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 20, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, $source {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 26, :column 7, :end-line 26, :end-column 14, :arglists (quote ([ns-name]))}, :name transmorphic.morph/$source, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 14, :method-params ([ns-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([ns-name]))}, is-submorph? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 22, :column 7, :end-line 22, :end-column 19, :arglists (quote ([parent morph]))}, :name transmorphic.morph/is-submorph?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 19, :method-params ([parent morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 2, :fn-var true, :arglists (quote ([parent morph]))}, local-offset {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 201, :column 7, :end-line 201, :end-column 19, :arglists (quote ([morph]))}, :name transmorphic.morph/local-offset, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 19, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 201, :end-line 201, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, set-prop {:name transmorphic.morph/set-prop, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 1, :end-line 264, :end-column 18, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 10, :end-line 264, :end-column 18, :declared true}}, get-description* {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 255, :column 7, :end-line 255, :end-column 23, :arglists (quote ([integrator] [integrator i])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([integrator] [integrator i]), :arglists ([integrator] [integrator i]), :arglists-meta (nil nil)}}, :name transmorphic.morph/get-description*, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([integrator] [integrator i]), :arglists ([integrator] [integrator i]), :arglists-meta (nil nil)}, :method-params ([integrator] [integrator i]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 2, :fn-var true, :arglists ([integrator] [integrator i])}, centered-in {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 129, :column 7, :end-line 129, :end-column 18, :arglists (quote ([reference-morph extent]))}, :name transmorphic.morph/centered-in, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 18, :method-params ([reference-morph extent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 129, :end-line 129, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reference-morph extent]))}, $owner {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 121, :column 7, :end-line 121, :end-column 13, :arglists (quote ([x])), :doc "Get the component, that passed the props to the\n   given owner or morph"}, :name transmorphic.morph/$owner, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 13, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 121, :end-line 121, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Get the component, that passed the props to the\n   given owner or morph"}, position-in-world {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 207, :column 7, :end-line 207, :end-column 24, :arglists (quote ([morph]))}, :name transmorphic.morph/position-in-world, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 24, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 207, :end-line 207, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, $props {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 39, :column 7, :end-line 39, :end-column 13, :arglists (quote ([morph] [morph prop])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([morph] [morph prop]), :arglists ([morph] [morph prop]), :arglists-meta (nil nil)}}, :name transmorphic.morph/$props, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([morph] [morph prop]), :arglists ([morph] [morph prop]), :arglists-meta (nil nil)}, :method-params ([morph] [morph prop]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 2, :fn-var true, :arglists ([morph] [morph prop])}, CollView {:name transmorphic.morph/CollView, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 1, :end-line 15, :end-column 69, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 61, :end-line 15, :end-column 69, :declared true}}, remove-morph {:name transmorphic.morph/remove-morph, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 1, :end-line 264, :end-column 41, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 29, :end-line 264, :end-column 41, :declared true}}, $local-state {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 100, :column 7, :end-line 100, :end-column 19, :arglists (quote ([component])), :doc "Retrieve the current local state of\n   the component."}, :name transmorphic.morph/$local-state, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 19, :method-params ([component]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component])), :doc "Retrieve the current local state of\n   the component."}, $component {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 82, :column 7, :end-line 82, :end-column 17, :arglists (quote ([id] [id query?])), :doc "Get the component that corresponding to the id.\n   We first assume id, is a global identifier.\n   If this fails, fall back to searching for\n   the next component that carries a matching\n   :id property.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [id query?]), :arglists ([id] [id query?]), :arglists-meta (nil nil)}}, :name transmorphic.morph/$component, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([id] [id query?]), :arglists ([id] [id query?]), :arglists-meta (nil nil)}, :method-params ([id] [id query?]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists ([id] [id query?]), :doc "Get the component that corresponding to the id.\n   We first assume id, is a global identifier.\n   If this fails, fall back to searching for\n   the next component that carries a matching\n   :id property."}, abstraction-root {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 135, :column 7, :end-line 135, :end-column 23, :arglists (quote ([morph] [morph abstraction-name])), :doc "Returns the path to the structure that represents\n  the root of the abstraction. Unlike owner-path, this can\n  either be a morph or a collection of morphs, since\n  abstractions can yield either of the two.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([morph] [morph abstraction-name]), :arglists ([morph] [morph abstraction-name]), :arglists-meta (nil nil)}}, :name transmorphic.morph/abstraction-root, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([morph] [morph abstraction-name]), :arglists ([morph] [morph abstraction-name]), :arglists-meta (nil nil)}, :method-params ([morph] [morph abstraction-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 135, :end-line 135, :max-fixed-arity 2, :fn-var true, :arglists ([morph] [morph abstraction-name]), :doc "Returns the path to the structure that represents\n  the root of the abstraction. Unlike owner-path, this can\n  either be a morph or a collection of morphs, since\n  abstractions can yield either of the two."}, eval-reactive-props {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 283, :column 7, :end-line 283, :end-column 26, :arglists (quote ([{:keys [id], :as compiled-props} lens world]))}, :name transmorphic.morph/eval-reactive-props, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 26, :method-params ([p__32503 lens world]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 283, :end-line 283, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [id], :as compiled-props} lens world]))}, $parent {:name transmorphic.morph/$parent, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 106, :column 1, :end-line 106, :end-column 18, :doc "Get the parent morph of a component or morph or \n   evaluate to the property of a parent morph.", :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 106, :column 11, :end-line 106, :end-column 18, :doc "Get the parent morph of a component or morph or \n   evaluate to the property of a parent morph."}}, $submorphs {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 49, :column 7, :end-line 49, :end-column 17, :arglists (quote ([x] [state x])), :doc "Get a vector of all current submorphs of\n   a component or morph.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [state x]), :arglists ([x] [state x]), :arglists-meta (nil nil)}}, :name transmorphic.morph/$submorphs, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([x] [state x]), :arglists ([x] [state x]), :arglists-meta (nil nil)}, :method-params ([x] [state x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 2, :fn-var true, :arglists ([x] [state x]), :doc "Get a vector of all current submorphs of\n   a component or morph."}, behavior {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 171, :column 7, :end-line 171, :end-column 15, :arglists (quote ([{:keys [init-value signals on-change global?]}]))}, :name transmorphic.morph/behavior, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 15, :method-params ([p__32473]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [init-value signals on-change global?]}]))}, vary {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 163, :column 7, :end-line 163, :end-column 11, :arglists (quote ([value transform signal])), :doc "Vary a value of a propery over time, given a transformation\n   of the value with respect to the current signals value.\n  \n  ex: (vary 42 #(* %1 (sin %2)) (current-time))"}, :name transmorphic.morph/vary, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 11, :method-params ([value transform signal]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 163, :end-line 163, :max-fixed-arity 3, :fn-var true, :arglists (quote ([value transform signal])), :doc "Vary a value of a propery over time, given a transformation\n   of the value with respect to the current signals value.\n  \n  ex: (vary 42 #(* %1 (sin %2)) (current-time))"}, animate {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 191, :column 7, :end-line 191, :end-column 14, :arglists (quote ([value easing]))}, :name transmorphic.morph/animate, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 14, :method-params ([value easing]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 2, :fn-var true, :arglists (quote ([value easing]))}, contains-morph? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 222, :column 7, :end-line 222, :end-column 22, :arglists (quote ([morph-a morph-b]))}, :name transmorphic.morph/contains-morph?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 22, :method-params ([morph-a morph-b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 222, :end-line 222, :max-fixed-arity 2, :fn-var true, :arglists (quote ([morph-a morph-b]))}, get-query {:name transmorphic.morph/get-query, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 1, :end-line 264, :end-column 51, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 42, :end-line 264, :end-column 51, :declared true}}, eval-reactive-prop {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 278, :column 7, :end-line 278, :end-column 25, :arglists (quote ([v world lens]))}, :name transmorphic.morph/eval-reactive-prop, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 25, :method-params ([v world lens]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 278, :end-line 278, :max-fixed-arity 3, :fn-var true, :arglists (quote ([v world lens]))}, orphaned? {:protocol-inline nil, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([morph]))}, :name transmorphic.morph/orphaned?, :variadic false, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :end-column 16, :method-params ([morph]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([morph]))}, Coll {:name transmorphic.morph/Coll, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 1, :end-line 15, :end-column 41, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 15, :column 37, :end-line 15, :end-column 41, :declared true}}, add-morph {:name transmorphic.morph/add-morph, :file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 1, :end-line 264, :end-column 28, :declared true, :meta {:file "/Users/sameer.rahmani/.C/transmorphic/src/cljc/transmorphic/morph.cljs", :line 264, :column 19, :end-line 264, :end-column 28, :declared true}}}, :require-macros {om.next om.next, om om.next, transmorphic.core transmorphic.core}, :cljs.analyzer/constants {:seen #{:y :reification :morph-id :root? :parent :else :global? :default :component/by-id :property :name :namespace/by-name :value :tangible halo :fetching :id :extent :init-value :component-id :position :origin :abstraction :x :relative? :submorphs :on-change :morph/by-id :hierarchy :morph :local-state :signals :abstraction-name :owner :reactive :props :eval}, :order [:owner :morph-id :submorphs :namespace/by-name :fetching :props :value :root? :morph/by-id :id :component/by-id :local-state :hierarchy :property :morph :else :default :parent :extent :x :y :abstraction-name :relative? :eval :init-value :signals :on-change :global? :origin :reactive :tangible :position :component-id halo :name :abstraction :reification]}, :doc nil}